> // traits
>
> class User {
>     def firstName
>     def lastName
> }
>
> trait Aging {
>
>     def age=0
>
>     def birthdayParty() {
>         age = age + 1
>     }
> }
>
> def newUser(values = [:]) {
>     def defaultValues = [
>             firstName: "Tim",
>             lastName: "Steffens"
>     ]
>     new User(defaultValues + values) as Aging
> }
>
> //def u = newUser()
> def u = newUser(firstName: "Arnold")
> u.firstName + " " + u.lastName
>
> u.age
Result: 0

> // traits
>
> class User {
>     def firstName
>     def lastName
> }
>
> trait Aging {
>
>     def age=0
>
>     def birthdayParty() {
>         age = age + 1
>     }
> }
>
> def newUser(values = [:]) {
>     def defaultValues = [
>             firstName: "Tim",
>             lastName: "Steffens"
>     ]
>     new User(defaultValues + values) as Aging
> }
>
> //def u = newUser()
> def u = newUser(firstName: "Arnold")
> u.firstName + " " + u.lastName
>
> u.birthdayParty()
> u.age
Result: 1

> // traits
>
> class User {
>     def firstName
>     def lastName
> }
>
> trait Aging {
>
>     def age=0
>
>     def birthdayParty() {
>         age = age + 1
>     }
> }
>
> def newUser(values = [:]) {
>     def defaultValues = [
>             firstName: "Tim",
>             lastName: "Steffens"
>     ]
>     new User(defaultValues + values)
> }
>
> //def u = newUser()
> def u = newUser(firstName: "Arnold")
> u.firstName + " " + u.lastName
>
> u.withTraits(Aging)
>
> u.birthdayParty()
> u.age

groovy.lang.MissingMethodException: No signature of method: User.birthdayParty() is applicable for argument types: () values: []
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.unwrap(ScriptBytecodeAdapter.java:58)
	at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.call(PogoMetaClassSite.java:54)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:117)
	at ideaGroovyConsole.run(ideaGroovyConsole.groovy:31)
	at groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:263)
	at groovy.lang.GroovyShell.run(GroovyShell.java:518)
	at groovy.lang.GroovyShell.run(GroovyShell.java:497)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSite.invoke(PogoMetaMethodSite.java:169)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.call(PogoMetaMethodSite.java:71)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:133)
	at console.run(console.txt:25)
	at groovy.ui.GroovyMain.processReader(GroovyMain.java:632)
	at groovy.ui.GroovyMain.processFiles(GroovyMain.java:540)
	at groovy.ui.GroovyMain.run(GroovyMain.java:382)
	at groovy.ui.GroovyMain.process(GroovyMain.java:370)
	at groovy.ui.GroovyMain.processArgs(GroovyMain.java:129)
	at groovy.ui.GroovyMain.main(GroovyMain.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.tools.GroovyStarter.rootLoader(GroovyStarter.java:109)
	at org.codehaus.groovy.tools.GroovyStarter.main(GroovyStarter.java:131)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.CommandLineWrapper.main(CommandLineWrapper.java:65)

> // traits
>
> class User {
>     def firstName
>     def lastName
> }
>
> trait Aging {
>
>     def age=0
>
>     def birthdayParty() {
>         age = age + 1
>     }
> }
>
> def newUser(values = [:]) {
>     def defaultValues = [
>             firstName: "Tim",
>             lastName: "Steffens"
>     ]
>     new User(defaultValues + values)
> }
>
> //def u = newUser()
> def u = newUser(firstName: "Arnold")
> u.firstName + " " + u.lastName
>
> def u1 = u.withTraits(Aging)
>
> u1.birthdayParty()
> u1.age
Result: 1